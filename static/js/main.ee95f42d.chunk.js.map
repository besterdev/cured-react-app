{"version":3,"sources":["actions/Transaction.action.js","components/TransactionForm.js","components/TransactionList.js","App.js","serviceWorker.js","reducers/TransactionReducer.js","index.js"],"names":["setStateToInsert","data","type","payload","setStateToUpdate","setStateToDelete","index","setStateToEdit","setStateClear","TransactionForm","state","returnStateObject","handleChange","e","setState","target","name","value","validate","isError","errors","firstnameError","tiheError","lastnameError","birthdayError","nationalityError","citizenidError","genderError","mobileError","passportError","salaryError","tihe","firstname","length","lastname","birthday","nationality","citizenid","gender","mobile","passport","salary","handleSubmit","preventDefault","props","currentIndex","insertTransaction","updateTransaction","this","list","prevProps","console","log","className","autoComplete","onSubmit","FormControl","variant","style","width","InputLabel","id","Select","labelId","onChange","label","helperText","MenuItem","FormHelperText","TextField","placeholder","InputLabelProps","shrink","component","marginRight","FormLabel","RadioGroup","row","aria-label","defaultValue","required","FormControlLabel","control","Radio","color","labelPlacement","Button","fullWidth","Component","connect","dispatch","bindActionCreators","actions","TransactionList","handleEdit","editTransaction","handleDelete","deleteTransaction","handleDeleteall","clearTransaction","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","startIcon","onClick","TableBody","map","item","key","App","Boolean","window","location","hostname","match","transactionReducer","action","JSON","parse","localStorage","getItem","push","setItem","stringify","splice","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee95f42d.chunk.js","sourcesContent":["export const setStateToInsert = (data) => ({\r\n  type: \"INSERT\",\r\n  payload: data,\r\n});\r\n\r\nexport const setStateToUpdate = (data) => ({\r\n  type: \"UPDATE\",\r\n  payload: data,\r\n});\r\n\r\nexport const setStateToDelete = (index) => ({\r\n  type: \"DELETE\",\r\n  payload: index,\r\n});\r\n\r\nexport const setStateToEdit = (index) => ({\r\n  type: \"UPDATE-INDEX\",\r\n  payload: index,\r\n});\r\n\r\nexport const setStateClear = () => ({\r\n  type: \"CLEAR\",\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/Transaction.action\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nclass TransactionForm extends Component {\r\n  state = { ...this.returnStateObject() };\r\n\r\n  returnStateObject() {\r\n    if (this.props.currentIndex === -1)\r\n      return {\r\n        tihe: \"\",\r\n        tiheError: \"\",\r\n        firstname: \"\",\r\n        firstnameError: \"\",\r\n        lastname: \"\",\r\n        lastnameError: \"\",\r\n        birthday: \"\",\r\n        birthdayError: \"\",\r\n        nationality: \"\",\r\n        nationalityError: \"\",\r\n        citizenid: \"\",\r\n        citizenidError: \"\",\r\n        gender: \"\",\r\n        genderError: \"\",\r\n        mobile: \"\",\r\n        mobileError: \"\",\r\n        passport: \"\",\r\n        passportError: \"\",\r\n        salary: \"\",\r\n        salaryError: \"\",\r\n      };\r\n    else return this.props.list[this.props.currentIndex];\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.currentIndex !== this.props.currentIndex ||\r\n      prevProps.list !== this.props.list\r\n    ) {\r\n      this.setState({ ...this.returnStateObject() });\r\n      console.log(prevProps, this.props);\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let isError = false;\r\n    const errors = {\r\n      firstnameError: \"\",\r\n      tiheError: \"\",\r\n      lastnameError: \"\",\r\n      birthdayError: \"\",\r\n      nationalityError: \"\",\r\n      citizenidError: \"\",\r\n      genderError: \"\",\r\n      mobileError: \"\",\r\n      passportError: \"\",\r\n      salaryError: \"\",\r\n    };\r\n    if (this.state.tihe === \"\") {\r\n      isError = true;\r\n      errors.tiheError = \"Please select prefix\";\r\n    }\r\n\r\n    if (this.state.firstname.length < 1) {\r\n      isError = true;\r\n      errors.firstnameError = \"Please enter firstname\";\r\n    }\r\n\r\n    if (this.state.lastname.length < 1) {\r\n      isError = true;\r\n      errors.lastnameError = \"Please enter lastname\";\r\n    }\r\n\r\n    if (this.state.birthday === \"\") {\r\n      isError = true;\r\n      errors.birthdayError = \"Please enter birthday\";\r\n    }\r\n    if (this.state.nationality === \"\") {\r\n      isError = true;\r\n      errors.nationalityError = \"Please select nationality\";\r\n    }\r\n    if (this.state.citizenid === \"\") {\r\n      isError = true;\r\n      errors.citizenidError = \"Please select citizen id\";\r\n    }\r\n    if (this.state.gender === \"\") {\r\n      isError = true;\r\n      errors.genderError = \"Please select gender\";\r\n    }\r\n    if (this.state.mobile === \"\") {\r\n      isError = true;\r\n      errors.mobileError = \"Please enter mobilephone\";\r\n    }\r\n    if (this.state.passport === \"\") {\r\n      isError = true;\r\n      errors.passportError = \"Please enter passport\";\r\n    }\r\n    if (this.state.salary === \"\") {\r\n      isError = true;\r\n      errors.salaryError = \"Please enter salary\";\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      ...errors,\r\n    });\r\n    return isError;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const err = this.validate();\r\n\r\n    if (!err) {\r\n      if (this.props.currentIndex == -1) {\r\n        this.props.insertTransaction(this.state);\r\n      } else {\r\n        this.props.updateTransaction(this.state);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <form\r\n          autoComplete=\"off\"\r\n          onSubmit={this.handleSubmit}\r\n          className=\"form-wrapper\"\r\n        >\r\n          <div className=\"row1\">\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{\r\n                width: 150,\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Prefix\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                name=\"tihe\"\r\n                value={this.state.tihe}\r\n                onChange={this.handleChange}\r\n                label=\"Prefix\"\r\n                helperText={this.state.tiheError}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={\"Mr\"}>Mr</MenuItem>\r\n                <MenuItem value={\"Miss\"}>Miss</MenuItem>\r\n              </Select>\r\n              <FormHelperText>{this.state.tiheError}</FormHelperText>\r\n            </FormControl>\r\n            <TextField\r\n              style={{\r\n                width: 200,\r\n              }}\r\n              id=\"outlined-error\"\r\n              name=\"firstname\"\r\n              label=\"Firstname\"\r\n              variant=\"outlined\"\r\n              value={this.state.firstname}\r\n              placeholder=\"Firstname\"\r\n              onChange={this.handleChange}\r\n              helperText={this.state.firstnameError}\r\n            />\r\n            <TextField\r\n              style={{\r\n                width: 200,\r\n              }}\r\n              id=\"outlined-basic\"\r\n              name=\"lastname\"\r\n              label=\"Lastname\"\r\n              variant=\"outlined\"\r\n              value={this.state.lastname}\r\n              placeholder=\"Lastname\"\r\n              onChange={this.handleChange}\r\n              helperText={this.state.lastnameError}\r\n            />\r\n          </div>\r\n          <div className=\"row2\">\r\n            <TextField\r\n              style={{\r\n                width: 180,\r\n              }}\r\n              id=\"birthday\"\r\n              label=\"Birthday\"\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              value={this.state.birthday}\r\n              placeholder=\"Birthday\"\r\n              name=\"birthday\"\r\n              helperText={this.state.birthdayError}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{\r\n                width: 180,\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Nationality\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                name=\"nationality\"\r\n                value={this.state.nationality}\r\n                onChange={this.handleChange}\r\n                label=\"Nationality\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={\"Thailand\"}>Thailand</MenuItem>\r\n                <MenuItem value={\"China\"}>China</MenuItem>\r\n              </Select>\r\n              <FormHelperText>{this.state.nationalityError}</FormHelperText>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              style={{\r\n                width: 180,\r\n              }}\r\n              id=\"outlined-basic\"\r\n              name=\"citizenid\"\r\n              label=\"Citizen ID\"\r\n              variant=\"outlined\"\r\n              value={this.state.citizenid}\r\n              placeholder=\"Citizen ID\"\r\n              onChange={this.handleChange}\r\n              helperText={this.state.citizenidError}\r\n            />\r\n          </div>\r\n          <div className=\"row3\">\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              style={{\r\n                width: 280,\r\n                marginRight: 20,\r\n              }}\r\n            >\r\n              <FormLabel component=\"legend\">Gender</FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"gender\"\r\n                required\r\n                component={RadioGroup}\r\n                label=\"Firstname\"\r\n                value={this.state.gender}\r\n                onChange={this.handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"male\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Male\"\r\n                  labelPlacement=\"start\"\r\n                  name=\"gender\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"female\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Female\"\r\n                  labelPlacement=\"start\"\r\n                  name=\"gender\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"unisex\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unisex\"\r\n                  labelPlacement=\"start\"\r\n                  name=\"gender\"\r\n                />\r\n              </RadioGroup>\r\n              <FormHelperText>{this.state.genderError}</FormHelperText>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              style={{\r\n                width: 180,\r\n                marginRight: 20,\r\n              }}\r\n              id=\"outlined-basic\"\r\n              name=\"mobile\"\r\n              label=\"Mobile Phone\"\r\n              variant=\"outlined\"\r\n              value={this.state.mobile}\r\n              placeholder=\"Mobile Phone\"\r\n              onChange={this.handleChange}\r\n              helperText={this.state.mobileError}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"row4\">\r\n            <TextField\r\n              style={{\r\n                width: 180,\r\n                marginRight: 20,\r\n              }}\r\n              id=\"outlined-basic\"\r\n              name=\"passport\"\r\n              label=\"Passport NO\"\r\n              variant=\"outlined\"\r\n              value={this.state.passport}\r\n              placeholder=\"Passport NO\"\r\n              onChange={this.handleChange}\r\n              helperText={this.state.passportError}\r\n            />\r\n            <TextField\r\n              style={{\r\n                width: 180,\r\n                marginRight: 20,\r\n              }}\r\n              type=\"number\"\r\n              id=\"outlined-basic\"\r\n              name=\"salary\"\r\n              label=\"Expected Salary\"\r\n              variant=\"outlined\"\r\n              value={this.state.salary}\r\n              placeholder=\"Expected Salary\"\r\n              onChange={this.handleChange}\r\n              helperText={this.state.salaryError}\r\n            />\r\n          </div>\r\n          <div className=\"row5\">\r\n            <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n\r\n          {/* <p>{JSON.stringify(this.state)}</p> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.list,\r\n    currentIndex: state.currentIndex,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      insertTransaction: actions.setStateToInsert,\r\n      updateTransaction: actions.setStateToUpdate,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm);\r\n","import React, { Component } from \"react\";\r\nimport TransactionForm from \"./TransactionForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/Transaction.action\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nclass TransactionList extends Component {\r\n  handleEdit = (index) => {\r\n    this.props.editTransaction(index);\r\n  };\r\n\r\n  handleDelete = (index) => {\r\n    this.props.deleteTransaction(index);\r\n  };\r\n\r\n  handleDeleteall = () => {\r\n    this.props.clearTransaction();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TransactionForm />\r\n\r\n        <TableContainer className=\"table-box\" component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>NAME</TableCell>\r\n                <TableCell align=\"right\"></TableCell>\r\n                <TableCell>GENDER</TableCell>\r\n                <TableCell>MOBILE</TableCell>\r\n                <TableCell>NATIONALITY</TableCell>\r\n                <TableCell></TableCell>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <Button\r\n                    style={{ width: 105 }}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => this.handleDeleteall()}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.list.map((item, index) => {\r\n                return (\r\n                  <TableRow key={index}>\r\n                    {/* <td>{item.tihe}</td> */}\r\n                    <TableCell>{item.firstname}</TableCell>\r\n                    <TableCell>{item.lastname}</TableCell>\r\n                    <TableCell>{item.gender}</TableCell>\r\n                    <TableCell>{item.mobile}</TableCell>\r\n\r\n                    <TableCell>{item.nationality}</TableCell>\r\n\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"yellow\"\r\n                        startIcon={<EditIcon />}\r\n                        onClick={() => this.handleEdit(index)}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<DeleteIcon />}\r\n                        onClick={() => this.handleDelete(index)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      deleteTransaction: actions.setStateToDelete,\r\n      editTransaction: actions.setStateToEdit,\r\n      clearTransaction: actions.setStateClear,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TransactionList from \"./components/TransactionList\";\n\nfunction App() {\n  return <TransactionList />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const transactionReducer = (state, action) => {\r\n  var list = JSON.parse(localStorage.getItem(\"transactions\"));\r\n\r\n  switch (action.type) {\r\n    case \"INSERT\":\r\n      list.push(action.payload);\r\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\r\n      return { list, currentIndex: -1 };\r\n\r\n    case \"UPDATE\":\r\n      list[state.currentIndex] = action.payload;\r\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\r\n      return { list, currentIndex: -1 };\r\n\r\n    case \"DELETE\":\r\n      list.splice(action.payload, 1);\r\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\r\n      return { list, currentIndex: -1 };\r\n\r\n    case \"UPDATE-INDEX\":\r\n      return { list, currentIndex: action.payload };\r\n\r\n    case \"CLEAR\":\r\n      list.splice(0);\r\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\r\n      return { list };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default transactionReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// call use redux\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { transactionReducer } from \"./reducers/TransactionReducer\";\n\nif (localStorage.getItem(\"transactions\") == null)\n  localStorage.setItem(\"transactions\", JSON.stringify([]));\nlet initialState = {\n  currentIndex: -1,\n  list: JSON.parse(localStorage.getItem(\"transactions\")),\n};\n\nvar store = createStore(transactionReducer, initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}